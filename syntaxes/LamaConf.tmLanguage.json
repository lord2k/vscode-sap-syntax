{
  "name": "LamaConf",
  "scopeName": "source.lama.conf",
  "patterns": [
    { "include": "source.sap.common#comment" },
    {
      "explanation": "Name",
      "match": "\\s*(Name\\s*:)\\s*(\\w+)",
      "captures": {
        "1": { "name": "keyword" },
        "2": { "name": "constant.character.escape markup.bold" }
      }
    },
    {
      "explanation": "Description",
      "match": "\\s*(Description\\s*:)\\s*([\\w\\s]+)",
      "captures": {
        "1": { "name": "keyword" },
        "2": { "name": "string" }
      }
    },
    { "begin": "=?'", "end": "'", "name": "string.quoted.single" },
    { "begin": "=?\"", "end": "\"", "name": "string.quoted.double" },
    {
      "explanation": "Keyword",
      "match": "^\\s*(\\w+:)",
      "captures": { "1": { "name": "keyword" } }
    },
    {
      "explanation": "XM",
      "name": "source.lama.conf",
      "contentName": "XM.Params",
      "begin": "(--executionModule)\\s*(\\w+)\\s",
      "end": "$",
      "captures": {
        "1": { "name": "entity.other.attribute-name constant.other.option" },
        "2": { "name": "constant.character.escape entity.name.xm" }
      },
      "patterns": [
        { "include": "#Params" }
      ]
    },
    { "include": "#Params" },
    { "include": "#Commands" },
    { "include": "#Path" },
    {
      "explanation": "Params",
      "match": "-[^\\s=]+",
      "name": "entity.other.attribute-name"
    },
    { "match": "/?(\\S+/)+\\S*", "name": "string.path" }
  ],
  "repository": {
    "Commands": {
      "explanation": "environment markers",
      "match": "(perl|bash|python|[ckz]?sh|mkdir|cd|rm|cp|ssh|hdblcm|find|sed|mv|wget|grep|saphostctrl|saphostexec?|su|chown|chmod|echo)\\s",
      "captures": {
        "1": { "name": "entity.name.command" }
      }
    },
    "Path": {
      "explanation": "path",
      "match": "((?:/[\\w\\.-]+/)+)+(/[\\w\\.-]+)?;?",
      "captures": {
        "1": {
          "name": "string.unquoted.path",
          "patterns": [{ "include": "source.sapinst.process#placeholder" }]
        },
        "2": { "name": "variable.parameter" }
      }
    },
    "Params": {
      "patterns": [
        { "include": "#Commands" },
        { "include": "source.sapinst.process#placeholder" },
        { "include": "#Path" },
        { "include": "#ParameterSimple" },
        { "include": "#ParameterLamaLong" },
        { "include": "#ParameterLamaShort" },
        {
          "explanation": "logical operators",
          "match": "([\\&\\|<>=+]){1,2}",
          "name": "keyword.operator.logic"
        },
        {
          "explanation": "regexp",
          "match": "([\\&\\|]){1,2}",
          "name": "keyword.operator.logic"
        }
      ]
    },
    "ParameterSimple": {
      "explanation": "Params Simple",
      "match": "([\\w\\-]+)\\s*([=\\s])\\s*([\\w<>/]+)?",
      "captures": {
        "1": { "name": "markup.italic constant.other.option" },
        "2": { "name": "keyword.operator.comparison" },
        "3": { "name": "string.unquoted.argument", "patterns": [
          { "include": "source.sapinst.process#placeholder" }
        ] }
      }
    },
    "ParameterLamaShort": {
      "explanation": "Params with $[<val>:<name>?=#required]",
      "match": "(?:\\$\\[([\\w\\-]*):?([\\w\\-]+)?(=)?((?:#\\w+)*)\\s*\\])",
      "captures": {
        "1": { "name": "string.unquoted.argument" },
        "2": { "name": "markup.italic constant.other.option" },
        "3": { "name": "keyword.operator.comparison" },
        "4": { "name": "variable.parameter " }
      }
    },
    "ParameterLamaLong": {
      "explanation": "XM Params with <name>=$[]",
      "match": "([\\w\\-]+)\\s*(=)\\s*\\$\\[([\\w\\-]+(:(?:#\\w+))?)\\s*\\]",
      "captures": { 
        "1": { "name": "markup.italic constant.other.option" },
        "2": { "name": "keyword.operator.comparison" },
        "3": { "name": "string.unquoted.argument" },
        "4": { "name": "variable.parameter " }
      }
    }
  }
}
